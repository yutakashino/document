＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

■柏野雄太（筆者プロフィール）

　バクフー株式会社代表取締役。Zopeの開発に関わっていました。最近は非同期webアプリケーションシステムの開発、データ解析・統計解析の請負業務、リアルタイムデータ解析などをしています。代表的な書籍・翻訳書に『Pythonポケットリファレンス』、『Zope3 入門篇』、『Zope3 発展篇』）

■「新卒お勧め本」リード文

　「新卒お勧め本」とありますが、あえて新卒に限定せずに、新興国の攻勢や「機械との競争」にさらされる職業人として、不確実な競争環境において生き残る技術者になるための本をオススメする、という観点から選書してみました。

■一冊目「功徳を積んで技術を身に付ける本」

「計算機プログラムの構造と解釈」
ジェラルド・ジェイ サスマン

　プロのソフトウェアエンジニアとしては、やはり計算機のことがよくわかってなければいけません。そのためにはプログラム言語にきちんと取り組む必要があります。そして、プログラム言語から計算機の「こころ」のようなものを学ぼうとすると、どうしても自分が普段使いでないLISP系言語の本を紹介することになってします。まあ、「神の言語」なので仕方ないのですが。

　「計算機プログラムの構造と解釈」はソフトウェアエンジニアにとってのまさに「古典」と呼ぶべき本です。SICPと短く省略して呼ばれています。はっきり言って形式は古いですし、本家MITでもあまりに「古」典なので講義が廃止されてしまったほどですし、面白いと感じるためにはかなり大きな山を乗り越えないといけません。正直言うと僕自身も半分くらいしかキチンと読んでないです（後の半分は後ほど提示するサスマン師のビデオ講義で誤魔化してます）。この本の真骨頂は本文より問題にあります。なにしろ問題の答えを次に使っているので、どうにかして解かないと次が読めません。つまり問題をひたすら修行僧のように解いて功徳を積んでいくと、そのうち悟りが開けるという狂った構成になってます。まあ、独習本というより、MITの講義と演習をそのまま本にしたものなので仕方ないのですが。
　
　ただ、この本を今オススメする理由の一番は、現在においてはいろいろなリソースが充実し比較的アクセスしやすい、ということです。まず、サスマン師の実際の講義ビデオを見て「直接」教わることができます(http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-001-structure-and-interpretation-of-computer-programs-spring-2005/video-lectures/)。もちろん講義は英語ですが、日本の国力が衰える一方の現状では、英語についてはあきらめて必死に勉強するしかないと腹をくくりましょう。また、この本は「名著過ぎる」のでSchemeでなくいろいろな言語に変換しようとしている人たちがいて、自分の好きな言語で結構読み進めることができます。そして最後に、なかなか独りでは読みにくいこの本も、日本ではこの本のファンがとても多く、読書会がとても頻繁に開かれているので、勉強しやすいということです。
　
　もしもSICPに抵抗ある、英語が好きじゃないし、地方に住んでいて独りぼっちだし、という方には別のオススメ本があります。「素数夜曲」吉田武 (著)です。これも狂った本の一つです。前半330ページの数論初歩の本文より、後半520ページのSchemaで数論計算環境を作る付録のほうが断然面白いです。この付録を頭からガンガンScheme環境に「写経」して功徳を積めば、そのうち悟りが開けるという構成になっています。問題を解かないと先に進めないSCIPよりも確かにとっつきやすいですし、完全独習書になっています。なにより、この本で自作したScheme上の整数論計算環境を用いて素数定理を調べたり四元数で遊んだりできますので内容が面白いです。技術書のビルディングスロマンといいますか、教養小説のような雰囲気を放っています。著者の独特の言葉遣いも力強く理解を助けると思います。
　
■二冊目「コーディング以外の武器を装備する本」

「入門 自然言語処理」
Steven Bird等

　ソフトウェアエンジニアという職業について、今は曲がり角にあるように私は感じています。少し前までのイメージですと、インターネットサービスのベンチャー企業のエンジニアが典型的なように、起業家や経営者や企画担当者のアイディアをプログラム言語を用いて実現する専門家で、世の中に流通するライブラリやフレームワークや自分のコーディングを効率よく組み合わせてシステムを構築する、というイメージがありました。言ってみれば誰かのアイディアを計算機が実現できるように、ソフトウェアの部品をつなぐ便利屋というか「配管工」のイメージですね。
　
　しかし、このようなイメージの職能だけでやっていくには、そろそろ難しくなってきたのではないかと思っています。それはGitHubなどのソーシャルコーディングリポジトリを起爆剤として、Free Open Source Softwareがあまりに成熟してきて、だれもが定評のあるライブラリやフレームワークにアクセスでき、「配管」作業なら誰でも簡単にできるようになったからです。もちろん新興国のエンジニアの追い上げも「機械との競争」もあります。要するに、将来に渡ってエンジニアとして食っていくには、単に「配管」技術だけでない、コーディング以外のスキルが必要になってくると思います。そういったスキルの大きなトレンドが、大きなデータから何か意味のある情報を引き出す技術だと思います。ここではコーディング以外の武器を装備するという文脈から、手を動かしながら学ぶことができる機械学習と自然言語処理の本について紹介します。以下で紹介する本はPythonに関わるものです。それは、私の現在の「ネイティブランゲージ」であるので状況をよく知っていますし、この分野で他の言語に比べて現在ダントツにモーメンタムがあるからです。さらに、Pythonは学習しやすく読みやすいのに巨大システムを構築できる堅牢性もあり、一度覚えてしまえば本格利用ができる利点があるからです。
　
　機械学習の初歩の原理的な側面を手を動かしながら学ぶには「Machine Learning - An Algorithmic Perspective」Stephen Marsland(著)がかなりよく書けている入門的教科書です。アルゴリズムの解説も短くわかりやすいですし、ひと通りこの分野をさらうことができます。ただ、実際に機械学習を自分で実装するときは、車輪の再発明を避けて、すでに定評あるパッケージを利用することが多いでしょう。そのときによく利用されるのが、とても定評があるscikit-learnです。そのscikit-learnを利用したチュートリアルが機械学習の入門「書」としてよくまとまっています(http://scikit-learn.github.com/scikit-learn-tutorial/)。これにはビデオチュートリアルもあります(http://www.youtube.com/watch?v=cHZONQ2-x7I) 。これらの本やサイトを利用すれば、短時間で機械学習の初歩を学ぶことがことができます。
　
　自然言語処理の分野にはNatural Language Tool Kit(NLTK)という定評あるPythonのパッケージがあります。このNLTKの解説本である「入門 自然言語処理」がこの自然言語処理をひと通りさらう入門書としてよく書けていると思います。この本も手を動かしながら学んでいくことができます。日本語版には日本語の言語処理についての適切な解説があることも、オススメできる理由となっています。
　
　機械学習にしても自然言語処理にしても、あまりに分野が広大で専門分岐が進んでいるので、その分野のエキスパートとして関わるのは大変です。しかし、ここでは「コーディング以外の武器」としてソフトウェアエンジニアが身に付ける知識として捉えてみました。現在はこれらの分野の知識が求められているのと、学習リソースで溢れかえっていて、学習障壁がとても下がっていますので、今がチャンスです。とてもコストパフォーマンスの高いスキルになると思います。

■合わせて読む「個人的にお勧め本」（最近の私のとっておき本）

「ファスト＆スロー」
ダニエル・カーネマン
　
　プロの職業人として生きるためには自分の失敗から学ばなければいけません。人間には誰にでも偏見やバイアスがありますし、物を筋立てて考えるのは大変ですから端折って考える傾向があります。そのバイアスとヒューリスティクス研究の権威が、意思決定の仕組みとエラーを避けるノウハウをバランスよく著述しています。意思決定がどうやって行われ、どうすればよりよく意思決定をできるかを学ぶことができます。
　
　脳の働きを、直感的に即座に動作するシステム1と筋道を立てて努力しながら考えるシステム2に分け、それらの２つのシステムが複雑に相互作用しながら意思決定が行われることを、著者自身を含めた研究成果や自身が犯した失敗を具体的に例示しながら解説してくれます。とくにシステム1が引き起こす間違いや誤認識についての記述に力が注がれていて、この本をキチンと読めば、（システム1の本源的な性質があるために）自分の犯すエラーを減らすことはできないかもしれませんが、他人のエラーを把握することができるようになると思います。
　
　この本において、よりよい意思決定をするためのノウハウとして個人的に衝撃を受けたのは、ゲーリー・クラインの"premortem meeting"です。これは、プロジェクトの開始前にそのプロジェクトが大失敗したと仮定して「死亡原因」を列挙し、そのことによりプロジェクトを進行する上でのシステム1が引き起こす楽観主義バイアスを牽制する仕組みです。このように、この本は職業人だけでなく、不確実な社会を生きる市民の基礎教養としても必要な本だと思います。
